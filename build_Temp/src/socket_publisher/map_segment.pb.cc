// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: map_segment.proto

#include "map_segment.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_map_5fsegment_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_map_5fsegment_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_map_Mat44;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_map_5fsegment_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_map_edge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_map_5fsegment_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_map_landmark;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_map_5fsegment_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_map_msg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_map_5fsegment_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_map_keyframe;
}  // namespace protobuf_map_5fsegment_2eproto
namespace map_segment {
class map_keyframeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<map_keyframe>
      _instance;
} _map_keyframe_default_instance_;
class map_edgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<map_edge>
      _instance;
} _map_edge_default_instance_;
class map_landmarkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<map_landmark>
      _instance;
} _map_landmark_default_instance_;
class map_Mat44DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<map_Mat44>
      _instance;
} _map_Mat44_default_instance_;
class map_msgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<map_msg>
      _instance;
} _map_msg_default_instance_;
class mapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<map>
      _instance;
} _map_default_instance_;
}  // namespace map_segment
namespace protobuf_map_5fsegment_2eproto {
static void InitDefaultsmap_keyframe() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map_segment::_map_keyframe_default_instance_;
    new (ptr) ::map_segment::map_keyframe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map_segment::map_keyframe::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_map_keyframe =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmap_keyframe}, {
      &protobuf_map_5fsegment_2eproto::scc_info_map_Mat44.base,}};

static void InitDefaultsmap_edge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map_segment::_map_edge_default_instance_;
    new (ptr) ::map_segment::map_edge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map_segment::map_edge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_map_edge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmap_edge}, {}};

static void InitDefaultsmap_landmark() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map_segment::_map_landmark_default_instance_;
    new (ptr) ::map_segment::map_landmark();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map_segment::map_landmark::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_map_landmark =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmap_landmark}, {}};

static void InitDefaultsmap_Mat44() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map_segment::_map_Mat44_default_instance_;
    new (ptr) ::map_segment::map_Mat44();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map_segment::map_Mat44::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_map_Mat44 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmap_Mat44}, {}};

static void InitDefaultsmap_msg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map_segment::_map_msg_default_instance_;
    new (ptr) ::map_segment::map_msg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map_segment::map_msg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_map_msg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmap_msg}, {}};

static void InitDefaultsmap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::map_segment::_map_default_instance_;
    new (ptr) ::map_segment::map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::map_segment::map::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_map =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsmap}, {
      &protobuf_map_5fsegment_2eproto::scc_info_map_Mat44.base,
      &protobuf_map_5fsegment_2eproto::scc_info_map_keyframe.base,
      &protobuf_map_5fsegment_2eproto::scc_info_map_edge.base,
      &protobuf_map_5fsegment_2eproto::scc_info_map_landmark.base,
      &protobuf_map_5fsegment_2eproto::scc_info_map_msg.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_map_keyframe.base);
  ::google::protobuf::internal::InitSCC(&scc_info_map_edge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_map_landmark.base);
  ::google::protobuf::internal::InitSCC(&scc_info_map_Mat44.base);
  ::google::protobuf::internal::InitSCC(&scc_info_map_msg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_map.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_keyframe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_keyframe, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_keyframe, pose_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_edge, id0_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_edge, id1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_landmark, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_landmark, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_landmark, coords_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_landmark, color_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_Mat44, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_Mat44, pose_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_msg, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map_msg, txt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map, current_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map, keyframes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map, edges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map, landmarks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map, local_landmarks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::map_segment::map, messages_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::map_segment::map_keyframe)},
  { 7, -1, sizeof(::map_segment::map_edge)},
  { 14, -1, sizeof(::map_segment::map_landmark)},
  { 22, -1, sizeof(::map_segment::map_Mat44)},
  { 28, -1, sizeof(::map_segment::map_msg)},
  { 35, -1, sizeof(::map_segment::map)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::map_segment::_map_keyframe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::map_segment::_map_edge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::map_segment::_map_landmark_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::map_segment::_map_Mat44_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::map_segment::_map_msg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::map_segment::_map_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "map_segment.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021map_segment.proto\022\013map_segment\"\306\003\n\003map"
      "\022-\n\rcurrent_frame\030\001 \001(\0132\026.map_segment.ma"
      "p.Mat44\022,\n\tkeyframes\030\002 \003(\0132\031.map_segment"
      ".map.keyframe\022$\n\005edges\030\003 \003(\0132\025.map_segme"
      "nt.map.edge\022,\n\tlandmarks\030\004 \003(\0132\031.map_seg"
      "ment.map.landmark\022\027\n\017local_landmarks\030\005 \003"
      "(\r\022&\n\010messages\030\006 \003(\0132\024.map_segment.map.m"
      "sg\032<\n\010keyframe\022\n\n\002id\030\001 \001(\r\022$\n\004pose\030\002 \001(\013"
      "2\026.map_segment.map.Mat44\032 \n\004edge\022\013\n\003id0\030"
      "\001 \001(\r\022\013\n\003id1\030\002 \001(\r\0325\n\010landmark\022\n\n\002id\030\001 \001"
      "(\r\022\016\n\006coords\030\002 \003(\001\022\r\n\005color\030\003 \003(\001\032\025\n\005Mat"
      "44\022\014\n\004pose\030\001 \003(\001\032\037\n\003msg\022\013\n\003tag\030\001 \001(\t\022\013\n\003"
      "txt\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 497);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "map_segment.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_map_5fsegment_2eproto
namespace map_segment {

// ===================================================================

void map_keyframe::InitAsDefaultInstance() {
  ::map_segment::_map_keyframe_default_instance_._instance.get_mutable()->pose_ = const_cast< ::map_segment::map_Mat44*>(
      ::map_segment::map_Mat44::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int map_keyframe::kIdFieldNumber;
const int map_keyframe::kPoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

map_keyframe::map_keyframe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_5fsegment_2eproto::scc_info_map_keyframe.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map_segment.map.keyframe)
}
map_keyframe::map_keyframe(const map_keyframe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pose()) {
    pose_ = new ::map_segment::map_Mat44(*from.pose_);
  } else {
    pose_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:map_segment.map.keyframe)
}

void map_keyframe::SharedCtor() {
  ::memset(&pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&pose_)) + sizeof(id_));
}

map_keyframe::~map_keyframe() {
  // @@protoc_insertion_point(destructor:map_segment.map.keyframe)
  SharedDtor();
}

void map_keyframe::SharedDtor() {
  if (this != internal_default_instance()) delete pose_;
}

void map_keyframe::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* map_keyframe::descriptor() {
  ::protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const map_keyframe& map_keyframe::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_5fsegment_2eproto::scc_info_map_keyframe.base);
  return *internal_default_instance();
}


void map_keyframe::Clear() {
// @@protoc_insertion_point(message_clear_start:map_segment.map.keyframe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool map_keyframe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map_segment.map.keyframe)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .map_segment.map.Mat44 pose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map_segment.map.keyframe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map_segment.map.keyframe)
  return false;
#undef DO_
}

void map_keyframe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map_segment.map.keyframe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .map_segment.map.Mat44 pose = 2;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pose(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map_segment.map.keyframe)
}

::google::protobuf::uint8* map_keyframe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map_segment.map.keyframe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .map_segment.map.Mat44 pose = 2;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pose(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map_segment.map.keyframe)
  return target;
}

size_t map_keyframe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map_segment.map.keyframe)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .map_segment.map.Mat44 pose = 2;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void map_keyframe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map_segment.map.keyframe)
  GOOGLE_DCHECK_NE(&from, this);
  const map_keyframe* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const map_keyframe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map_segment.map.keyframe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map_segment.map.keyframe)
    MergeFrom(*source);
  }
}

void map_keyframe::MergeFrom(const map_keyframe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map_segment.map.keyframe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pose()) {
    mutable_pose()->::map_segment::map_Mat44::MergeFrom(from.pose());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void map_keyframe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map_segment.map.keyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void map_keyframe::CopyFrom(const map_keyframe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map_segment.map.keyframe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool map_keyframe::IsInitialized() const {
  return true;
}

void map_keyframe::Swap(map_keyframe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void map_keyframe::InternalSwap(map_keyframe* other) {
  using std::swap;
  swap(pose_, other->pose_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata map_keyframe::GetMetadata() const {
  protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void map_edge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int map_edge::kId0FieldNumber;
const int map_edge::kId1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

map_edge::map_edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_5fsegment_2eproto::scc_info_map_edge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map_segment.map.edge)
}
map_edge::map_edge(const map_edge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id0_, &from.id0_,
    static_cast<size_t>(reinterpret_cast<char*>(&id1_) -
    reinterpret_cast<char*>(&id0_)) + sizeof(id1_));
  // @@protoc_insertion_point(copy_constructor:map_segment.map.edge)
}

void map_edge::SharedCtor() {
  ::memset(&id0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id1_) -
      reinterpret_cast<char*>(&id0_)) + sizeof(id1_));
}

map_edge::~map_edge() {
  // @@protoc_insertion_point(destructor:map_segment.map.edge)
  SharedDtor();
}

void map_edge::SharedDtor() {
}

void map_edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* map_edge::descriptor() {
  ::protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const map_edge& map_edge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_5fsegment_2eproto::scc_info_map_edge.base);
  return *internal_default_instance();
}


void map_edge::Clear() {
// @@protoc_insertion_point(message_clear_start:map_segment.map.edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id1_) -
      reinterpret_cast<char*>(&id0_)) + sizeof(id1_));
  _internal_metadata_.Clear();
}

bool map_edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map_segment.map.edge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id0 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id0_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map_segment.map.edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map_segment.map.edge)
  return false;
#undef DO_
}

void map_edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map_segment.map.edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id0 = 1;
  if (this->id0() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id0(), output);
  }

  // uint32 id1 = 2;
  if (this->id1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id1(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map_segment.map.edge)
}

::google::protobuf::uint8* map_edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map_segment.map.edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id0 = 1;
  if (this->id0() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id0(), target);
  }

  // uint32 id1 = 2;
  if (this->id1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id1(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map_segment.map.edge)
  return target;
}

size_t map_edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map_segment.map.edge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id0 = 1;
  if (this->id0() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id0());
  }

  // uint32 id1 = 2;
  if (this->id1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id1());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void map_edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map_segment.map.edge)
  GOOGLE_DCHECK_NE(&from, this);
  const map_edge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const map_edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map_segment.map.edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map_segment.map.edge)
    MergeFrom(*source);
  }
}

void map_edge::MergeFrom(const map_edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map_segment.map.edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id0() != 0) {
    set_id0(from.id0());
  }
  if (from.id1() != 0) {
    set_id1(from.id1());
  }
}

void map_edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map_segment.map.edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void map_edge::CopyFrom(const map_edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map_segment.map.edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool map_edge::IsInitialized() const {
  return true;
}

void map_edge::Swap(map_edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void map_edge::InternalSwap(map_edge* other) {
  using std::swap;
  swap(id0_, other->id0_);
  swap(id1_, other->id1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata map_edge::GetMetadata() const {
  protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void map_landmark::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int map_landmark::kIdFieldNumber;
const int map_landmark::kCoordsFieldNumber;
const int map_landmark::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

map_landmark::map_landmark()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_5fsegment_2eproto::scc_info_map_landmark.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map_segment.map.landmark)
}
map_landmark::map_landmark(const map_landmark& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      coords_(from.coords_),
      color_(from.color_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:map_segment.map.landmark)
}

void map_landmark::SharedCtor() {
  id_ = 0u;
}

map_landmark::~map_landmark() {
  // @@protoc_insertion_point(destructor:map_segment.map.landmark)
  SharedDtor();
}

void map_landmark::SharedDtor() {
}

void map_landmark::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* map_landmark::descriptor() {
  ::protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const map_landmark& map_landmark::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_5fsegment_2eproto::scc_info_map_landmark.base);
  return *internal_default_instance();
}


void map_landmark::Clear() {
// @@protoc_insertion_point(message_clear_start:map_segment.map.landmark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coords_.Clear();
  color_.Clear();
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool map_landmark::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map_segment.map.landmark)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double coords = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_coords())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 18u, input, this->mutable_coords())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double color = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_color())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 26u, input, this->mutable_color())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map_segment.map.landmark)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map_segment.map.landmark)
  return false;
#undef DO_
}

void map_landmark::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map_segment.map.landmark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated double coords = 2;
  if (this->coords_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _coords_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->coords().data(), this->coords_size(), output);
  }

  // repeated double color = 3;
  if (this->color_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _color_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->color().data(), this->color_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map_segment.map.landmark)
}

::google::protobuf::uint8* map_landmark::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map_segment.map.landmark)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated double coords = 2;
  if (this->coords_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _coords_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->coords_, target);
  }

  // repeated double color = 3;
  if (this->color_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _color_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->color_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map_segment.map.landmark)
  return target;
}

size_t map_landmark::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map_segment.map.landmark)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double coords = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->coords_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _coords_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double color = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->color_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _color_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void map_landmark::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map_segment.map.landmark)
  GOOGLE_DCHECK_NE(&from, this);
  const map_landmark* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const map_landmark>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map_segment.map.landmark)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map_segment.map.landmark)
    MergeFrom(*source);
  }
}

void map_landmark::MergeFrom(const map_landmark& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map_segment.map.landmark)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coords_.MergeFrom(from.coords_);
  color_.MergeFrom(from.color_);
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void map_landmark::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map_segment.map.landmark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void map_landmark::CopyFrom(const map_landmark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map_segment.map.landmark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool map_landmark::IsInitialized() const {
  return true;
}

void map_landmark::Swap(map_landmark* other) {
  if (other == this) return;
  InternalSwap(other);
}
void map_landmark::InternalSwap(map_landmark* other) {
  using std::swap;
  coords_.InternalSwap(&other->coords_);
  color_.InternalSwap(&other->color_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata map_landmark::GetMetadata() const {
  protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void map_Mat44::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int map_Mat44::kPoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

map_Mat44::map_Mat44()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_5fsegment_2eproto::scc_info_map_Mat44.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map_segment.map.Mat44)
}
map_Mat44::map_Mat44(const map_Mat44& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pose_(from.pose_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:map_segment.map.Mat44)
}

void map_Mat44::SharedCtor() {
}

map_Mat44::~map_Mat44() {
  // @@protoc_insertion_point(destructor:map_segment.map.Mat44)
  SharedDtor();
}

void map_Mat44::SharedDtor() {
}

void map_Mat44::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* map_Mat44::descriptor() {
  ::protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const map_Mat44& map_Mat44::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_5fsegment_2eproto::scc_info_map_Mat44.base);
  return *internal_default_instance();
}


void map_Mat44::Clear() {
// @@protoc_insertion_point(message_clear_start:map_segment.map.Mat44)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pose_.Clear();
  _internal_metadata_.Clear();
}

bool map_Mat44::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map_segment.map.Mat44)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double pose = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_pose())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_pose())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map_segment.map.Mat44)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map_segment.map.Mat44)
  return false;
#undef DO_
}

void map_Mat44::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map_segment.map.Mat44)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double pose = 1;
  if (this->pose_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pose_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->pose().data(), this->pose_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map_segment.map.Mat44)
}

::google::protobuf::uint8* map_Mat44::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map_segment.map.Mat44)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double pose = 1;
  if (this->pose_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pose_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->pose_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map_segment.map.Mat44)
  return target;
}

size_t map_Mat44::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map_segment.map.Mat44)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double pose = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pose_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pose_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void map_Mat44::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map_segment.map.Mat44)
  GOOGLE_DCHECK_NE(&from, this);
  const map_Mat44* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const map_Mat44>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map_segment.map.Mat44)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map_segment.map.Mat44)
    MergeFrom(*source);
  }
}

void map_Mat44::MergeFrom(const map_Mat44& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map_segment.map.Mat44)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pose_.MergeFrom(from.pose_);
}

void map_Mat44::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map_segment.map.Mat44)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void map_Mat44::CopyFrom(const map_Mat44& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map_segment.map.Mat44)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool map_Mat44::IsInitialized() const {
  return true;
}

void map_Mat44::Swap(map_Mat44* other) {
  if (other == this) return;
  InternalSwap(other);
}
void map_Mat44::InternalSwap(map_Mat44* other) {
  using std::swap;
  pose_.InternalSwap(&other->pose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata map_Mat44::GetMetadata() const {
  protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void map_msg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int map_msg::kTagFieldNumber;
const int map_msg::kTxtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

map_msg::map_msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_5fsegment_2eproto::scc_info_map_msg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map_segment.map.msg)
}
map_msg::map_msg(const map_msg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tag().size() > 0) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  txt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txt().size() > 0) {
    txt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txt_);
  }
  // @@protoc_insertion_point(copy_constructor:map_segment.map.msg)
}

void map_msg::SharedCtor() {
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

map_msg::~map_msg() {
  // @@protoc_insertion_point(destructor:map_segment.map.msg)
  SharedDtor();
}

void map_msg::SharedDtor() {
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void map_msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* map_msg::descriptor() {
  ::protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const map_msg& map_msg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_5fsegment_2eproto::scc_info_map_msg.base);
  return *internal_default_instance();
}


void map_msg::Clear() {
// @@protoc_insertion_point(message_clear_start:map_segment.map.msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool map_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map_segment.map.msg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), static_cast<int>(this->tag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "map_segment.map.msg.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string txt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txt().data(), static_cast<int>(this->txt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "map_segment.map.msg.txt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map_segment.map.msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map_segment.map.msg)
  return false;
#undef DO_
}

void map_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map_segment.map.msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tag = 1;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "map_segment.map.msg.tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag(), output);
  }

  // string txt = 2;
  if (this->txt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txt().data(), static_cast<int>(this->txt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "map_segment.map.msg.txt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->txt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map_segment.map.msg)
}

::google::protobuf::uint8* map_msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map_segment.map.msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string tag = 1;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), static_cast<int>(this->tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "map_segment.map.msg.tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag(), target);
  }

  // string txt = 2;
  if (this->txt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txt().data(), static_cast<int>(this->txt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "map_segment.map.msg.txt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->txt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map_segment.map.msg)
  return target;
}

size_t map_msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map_segment.map.msg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string tag = 1;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  // string txt = 2;
  if (this->txt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void map_msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map_segment.map.msg)
  GOOGLE_DCHECK_NE(&from, this);
  const map_msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const map_msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map_segment.map.msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map_segment.map.msg)
    MergeFrom(*source);
  }
}

void map_msg::MergeFrom(const map_msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map_segment.map.msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.txt().size() > 0) {

    txt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txt_);
  }
}

void map_msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map_segment.map.msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void map_msg::CopyFrom(const map_msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map_segment.map.msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool map_msg::IsInitialized() const {
  return true;
}

void map_msg::Swap(map_msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void map_msg::InternalSwap(map_msg* other) {
  using std::swap;
  tag_.Swap(&other->tag_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  txt_.Swap(&other->txt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata map_msg::GetMetadata() const {
  protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void map::InitAsDefaultInstance() {
  ::map_segment::_map_default_instance_._instance.get_mutable()->current_frame_ = const_cast< ::map_segment::map_Mat44*>(
      ::map_segment::map_Mat44::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int map::kCurrentFrameFieldNumber;
const int map::kKeyframesFieldNumber;
const int map::kEdgesFieldNumber;
const int map::kLandmarksFieldNumber;
const int map::kLocalLandmarksFieldNumber;
const int map::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

map::map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_map_5fsegment_2eproto::scc_info_map.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:map_segment.map)
}
map::map(const map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keyframes_(from.keyframes_),
      edges_(from.edges_),
      landmarks_(from.landmarks_),
      local_landmarks_(from.local_landmarks_),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_current_frame()) {
    current_frame_ = new ::map_segment::map_Mat44(*from.current_frame_);
  } else {
    current_frame_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:map_segment.map)
}

void map::SharedCtor() {
  current_frame_ = NULL;
}

map::~map() {
  // @@protoc_insertion_point(destructor:map_segment.map)
  SharedDtor();
}

void map::SharedDtor() {
  if (this != internal_default_instance()) delete current_frame_;
}

void map::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* map::descriptor() {
  ::protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const map& map::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_map_5fsegment_2eproto::scc_info_map.base);
  return *internal_default_instance();
}


void map::Clear() {
// @@protoc_insertion_point(message_clear_start:map_segment.map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyframes_.Clear();
  edges_.Clear();
  landmarks_.Clear();
  local_landmarks_.Clear();
  messages_.Clear();
  if (GetArenaNoVirtual() == NULL && current_frame_ != NULL) {
    delete current_frame_;
  }
  current_frame_ = NULL;
  _internal_metadata_.Clear();
}

bool map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:map_segment.map)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .map_segment.map.Mat44 current_frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_current_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .map_segment.map.keyframe keyframes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keyframes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .map_segment.map.edge edges = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .map_segment.map.landmark landmarks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_landmarks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 local_landmarks = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_local_landmarks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_local_landmarks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .map_segment.map.msg messages = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:map_segment.map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:map_segment.map)
  return false;
#undef DO_
}

void map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:map_segment.map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .map_segment.map.Mat44 current_frame = 1;
  if (this->has_current_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_current_frame(), output);
  }

  // repeated .map_segment.map.keyframe keyframes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyframes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->keyframes(static_cast<int>(i)),
      output);
  }

  // repeated .map_segment.map.edge edges = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->edges(static_cast<int>(i)),
      output);
  }

  // repeated .map_segment.map.landmark landmarks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->landmarks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->landmarks(static_cast<int>(i)),
      output);
  }

  // repeated uint32 local_landmarks = 5;
  if (this->local_landmarks_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _local_landmarks_cached_byte_size_));
  }
  for (int i = 0, n = this->local_landmarks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->local_landmarks(i), output);
  }

  // repeated .map_segment.map.msg messages = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->messages(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:map_segment.map)
}

::google::protobuf::uint8* map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:map_segment.map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .map_segment.map.Mat44 current_frame = 1;
  if (this->has_current_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_current_frame(), deterministic, target);
  }

  // repeated .map_segment.map.keyframe keyframes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyframes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->keyframes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .map_segment.map.edge edges = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->edges(static_cast<int>(i)), deterministic, target);
  }

  // repeated .map_segment.map.landmark landmarks = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->landmarks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->landmarks(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 local_landmarks = 5;
  if (this->local_landmarks_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _local_landmarks_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->local_landmarks_, target);
  }

  // repeated .map_segment.map.msg messages = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->messages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:map_segment.map)
  return target;
}

size_t map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:map_segment.map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .map_segment.map.keyframe keyframes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->keyframes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keyframes(static_cast<int>(i)));
    }
  }

  // repeated .map_segment.map.edge edges = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->edges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->edges(static_cast<int>(i)));
    }
  }

  // repeated .map_segment.map.landmark landmarks = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->landmarks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->landmarks(static_cast<int>(i)));
    }
  }

  // repeated uint32 local_landmarks = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->local_landmarks_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _local_landmarks_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .map_segment.map.msg messages = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  // .map_segment.map.Mat44 current_frame = 1;
  if (this->has_current_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *current_frame_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:map_segment.map)
  GOOGLE_DCHECK_NE(&from, this);
  const map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:map_segment.map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:map_segment.map)
    MergeFrom(*source);
  }
}

void map::MergeFrom(const map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:map_segment.map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keyframes_.MergeFrom(from.keyframes_);
  edges_.MergeFrom(from.edges_);
  landmarks_.MergeFrom(from.landmarks_);
  local_landmarks_.MergeFrom(from.local_landmarks_);
  messages_.MergeFrom(from.messages_);
  if (from.has_current_frame()) {
    mutable_current_frame()->::map_segment::map_Mat44::MergeFrom(from.current_frame());
  }
}

void map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:map_segment.map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void map::CopyFrom(const map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:map_segment.map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool map::IsInitialized() const {
  return true;
}

void map::Swap(map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void map::InternalSwap(map* other) {
  using std::swap;
  CastToBase(&keyframes_)->InternalSwap(CastToBase(&other->keyframes_));
  CastToBase(&edges_)->InternalSwap(CastToBase(&other->edges_));
  CastToBase(&landmarks_)->InternalSwap(CastToBase(&other->landmarks_));
  local_landmarks_.InternalSwap(&other->local_landmarks_);
  CastToBase(&messages_)->InternalSwap(CastToBase(&other->messages_));
  swap(current_frame_, other->current_frame_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata map::GetMetadata() const {
  protobuf_map_5fsegment_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_map_5fsegment_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace map_segment
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map_segment::map_keyframe* Arena::CreateMaybeMessage< ::map_segment::map_keyframe >(Arena* arena) {
  return Arena::CreateInternal< ::map_segment::map_keyframe >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map_segment::map_edge* Arena::CreateMaybeMessage< ::map_segment::map_edge >(Arena* arena) {
  return Arena::CreateInternal< ::map_segment::map_edge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map_segment::map_landmark* Arena::CreateMaybeMessage< ::map_segment::map_landmark >(Arena* arena) {
  return Arena::CreateInternal< ::map_segment::map_landmark >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map_segment::map_Mat44* Arena::CreateMaybeMessage< ::map_segment::map_Mat44 >(Arena* arena) {
  return Arena::CreateInternal< ::map_segment::map_Mat44 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map_segment::map_msg* Arena::CreateMaybeMessage< ::map_segment::map_msg >(Arena* arena) {
  return Arena::CreateInternal< ::map_segment::map_msg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::map_segment::map* Arena::CreateMaybeMessage< ::map_segment::map >(Arena* arena) {
  return Arena::CreateInternal< ::map_segment::map >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
